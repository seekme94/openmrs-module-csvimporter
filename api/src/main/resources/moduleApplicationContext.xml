<?xml version="1.0" encoding="UTF-8"?>

<!-- Beans to add to the current Application context definition -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  		    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  		    http://www.springframework.org/schema/context
  		    http://www.springframework.org/schema/context/spring-context-3.0.xsd
  		    http://www.springframework.org/schema/jee
  		    http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
  		    http://www.springframework.org/schema/tx
  		    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  		    http://www.springframework.org/schema/aop
  		    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  		    http://www.springframework.org/schema/util
  		    http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- This bean calls ServiceContext.setModuleService() with our CsvImporterService 
		class -->
	<!-- This makes it possible to call Context.getService(CsvImporterService.class).saveConfiguration(configuration);... -->
	<bean parent="serviceContext">
		<property name="moduleService">
			<list>
				<!-- service interface name. this is the "key" to look up our service 
					in Context.getService() -->
				<value>org.openmrs.module.csvimporter.CsvImporterService</value>
				<bean
					class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
					<property name="transactionManager">
						<ref bean="transactionManager" />
					</property>
					<property name="target">
						<!-- This is our service class implementation that actually does the 
							business logic -->
						<bean class="org.openmrs.module.csvimporter.impl.CsvImporterServiceImpl">

							<!-- this calls csvImporterServiceImpl.setDao(new CsvImporterDAOImpl) -->
							<property name="dao">
								<bean
									class="org.openmrs.module.csvimporter.db.hibernate.CsvImporterDAOImpl">

									<!-- the "sessionFactory" object is provided by the applicationContext-service.xml 
										file in core openmrs -->
									<property name="sessionFactory">
										<ref bean="sessionFactory" />
									</property>
								</bean>
							</property>
						</bean>
					</property>

					<property name="preInterceptors">
						<!-- This is a list of AOP advice that wraps around each of the methods 
							in our CsvImporterServiceImpl -->
						<ref bean="serviceInterceptors" />
					</property>
					<property name="transactionAttributeSource">
						<bean
							class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
					</property>
				</bean>
			</list>
		</property>
	</bean>

</beans>
